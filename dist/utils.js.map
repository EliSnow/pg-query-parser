{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":";;;;;QAIgB,I,GAAA,I;QA0CA,K,GAAA,K;QAUA,G,GAAA,G;QAcA,M,GAAA,M;QAMA,M,GAAA,M;QAMA,K,GAAA,K;;AAlFhB;;;;;;AAEA,MAAM,OAAO,EAAb;;AAEO,SAAS,IAAT,CAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC9B,MAAI,iBAAE,OAAF,CAAU,GAAV,CAAJ,EAAoB;AAClB,SAAK,MAAM,IAAX,IAAmB,GAAnB,EAAwB;AACtB,UAAI,KAAK,GAAL,EAAU,IAAV,MAAoB,IAAxB,EAA8B;AAC5B,eAAO,IAAP;AACD;AACF;;AAED,UAAM,UAAU,EAAhB;;AAEA,SAAK,MAAM,IAAX,IAAmB,GAAnB,EAAwB;AACtB,cAAQ,IAAR,CAAa,KAAK,IAAL,EAAW,IAAX,CAAb;AACD;;AAED,WAAO,OAAP;AACD,GAdD,MAcO,IAAI,iBAAE,QAAF,CAAW,GAAX,CAAJ,EAAqB;AAC1B,SAAK,MAAM,GAAX,IAAkB,OAAO,IAAP,CAAY,GAAZ,CAAlB,EAAoC;AAClC,YAAM,QAAQ,IAAI,GAAJ,CAAd;;AAEA,UAAI,KAAK,GAAL,EAAU,GAAV,EAAe,KAAf,MAA0B,IAA9B,EAAoC;AAClC,eAAO,GAAP;AACD;AACF;;AAED,UAAM,UAAU,EAAhB;;AAEA,SAAK,MAAM,GAAX,IAAkB,OAAO,IAAP,CAAY,GAAZ,CAAlB,EAAoC;AAClC,YAAM,QAAQ,IAAI,GAAJ,CAAd;;AAEA,cAAQ,IAAR,CAAa,KAAK,KAAL,EAAY,IAAZ,CAAb;AACD;;AAED,WAAO,OAAP;AACD;;AAED,MAAI,KAAK,GAAL,MAAc,IAAlB,EAAwB;AACtB,WAAO,GAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAEM,SAAS,KAAT,CAAe,GAAf,EAAoB,IAApB,EAA0B;AAC/B,SAAO,KAAK,GAAL,EAAU,CAAC,MAAD,EAAS,GAAT,EAAc,KAAd,KAAwB;AACvC,QAAI,KAAK,MAAL,EAAa,GAAb,EAAkB,KAAlB,CAAJ,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,WAAO,IAAP;AACD,GANM,CAAP;AAOD;;AAEM,SAAS,GAAT,CAAa,GAAb,EAAkB,IAAlB,EAAwB;AAC7B,QAAM,UAAU,EAAhB;;AAEA,OAAK,GAAL,EAAU,CAAC,MAAD,EAAS,GAAT,EAAc,KAAd,KAAwB;AAChC,QAAI,KAAK,MAAL,EAAa,GAAb,EAAkB,KAAlB,CAAJ,EAA8B;AAC5B,aAAO,QAAQ,IAAR,CAAa,GAAb,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GAND;;AAQA,SAAO,OAAP;AACD;;AAEM,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AAC5B,SAAO,IAAI,KAAJ,EAAW,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB;AACrC,WAAO,QAAQ,UAAf;AACD,GAFM,CAAP;AAGD;;AAEM,SAAS,MAAT,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B;AAClC,SAAO,IAAI,KAAJ,EAAW,CAAC,MAAD,EAAS,GAAT,EAAc,KAAd,KAAwB;AACxC,WAAO,QAAQ,IAAf;AACD,GAFM,CAAP;AAGD;;AAEM,SAAS,KAAT,CAAe,IAAf,EAAqB;AAC1B,OAAK,IAAL,EAAW,CAAC,MAAD,EAAS,GAAT,EAAc,KAAd,KAAwB;AACjC,QAAI,iBAAE,OAAF,CAAU,MAAV,CAAJ,EAAuB;AACrB;AACD;;AAED,QAAI,QAAQ,UAAZ,EAAwB;AACtB,aAAO,OAAO,QAAd;AACD;AACF,GARD;;AAUA,SAAO,IAAP;AACD","file":"utils.js","sourcesContent":["import _ from 'lodash';\n\nconst EXIT = {};\n\nexport function walk(obj, func) {\n  if (_.isArray(obj)) {\n    for (const item of obj) {\n      if (func(obj, item) === EXIT) {\n        return item;\n      }\n    }\n\n    const results = [];\n\n    for (const item of obj) {\n      results.push(walk(item, func));\n    }\n\n    return results;\n  } else if (_.isObject(obj)) {\n    for (const key of Object.keys(obj)) {\n      const value = obj[key];\n\n      if (func(obj, key, value) === EXIT) {\n        return obj;\n      }\n    }\n\n    const results = [];\n\n    for (const key of Object.keys(obj)) {\n      const value = obj[key];\n\n      results.push(walk(value, func));\n    }\n\n    return results;\n  }\n\n  if (func(obj) === EXIT) {\n    return obj;\n  }\n\n  return null;\n}\n\nexport function first(obj, func) {\n  return walk(obj, (object, key, value) => {\n    if (func(object, key, value)) {\n      return EXIT;\n    }\n\n    return null;\n  });\n}\n\nexport function all(obj, func) {\n  const results = [];\n\n  walk(obj, (object, key, value) => {\n    if (func(object, key, value)) {\n      return results.push(obj);\n    }\n\n    return null;\n  });\n\n  return results;\n}\n\nexport function tables(query) {\n  return all(query, (obj, key, value) => {\n    return key === 'RangeVar';\n  });\n}\n\nexport function byType(query, type) {\n  return all(query, (object, key, value) => {\n    return key === type;\n  });\n}\n\nexport function clean(tree) {\n  walk(tree, (object, key, value) => {\n    if (_.isArray(object)) {\n      return;\n    }\n\n    if (key === 'location') {\n      delete object.location;\n    }\n  });\n\n  return tree;\n}\n"]}