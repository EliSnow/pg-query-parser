{"version":3,"sources":["../src/deparser.js"],"names":[],"mappings":"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","file":"deparser.js","sourcesContent":["import _ from 'lodash';\nimport { format } from 'util';\n\nconst { keys } = _;\n\nconst compact = o => {\n  return _.filter(_.compact(o), (p) => {\n    if (p == null) {\n      return false;\n    }\n\n    return p.toString().length;\n  });\n};\n\nconst fail = (type, node) => {\n  throw new Error(format('Unhandled %s node: %s', type, JSON.stringify(node)));\n};\n\nconst parens = (string) => {\n  return '(' + string + ')';\n};\n\nconst indent = (text, count = 1) => text;\n\nexport default class Deparser {\n  static deparse(query) {\n    return new Deparser(query).deparseQuery();\n  }\n\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  deparseQuery() {\n    return (this.tree.map(node => this.deparse(node))).join('\\n\\n');\n  }\n\n  deparseNodes(nodes) {\n    return nodes.map(node => this.deparse(node));\n  }\n\n  list(nodes, separator = ', ') {\n    if (!nodes) {\n      return '';\n    }\n\n    return this.deparseNodes(nodes).join(separator);\n  }\n\n  quote(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (_.isArray(value)) {\n      return value.map(o => this.quote(o));\n    }\n\n    return '\"' + value + '\"';\n  }\n\n  // SELECT encode(E'''123\\\\000\\\\001', 'base64')\n  escape(literal) {\n    return \"'\" + literal.replace(/'/g, \"''\") + \"'\";\n  }\n\n  convertTypeName(typeName, size) {\n    switch (typeName) {\n      case 'bpchar':\n        if (size != null) {\n          return 'char';\n        }\n        // return `pg_catalog.bpchar` below so that the following is symmetric\n        // SELECT char 'c' = char 'c' AS true\n        return 'pg_catalog.bpchar';\n      case 'varchar':\n        return 'varchar';\n      case 'numeric':\n        return 'numeric';\n      case 'bool':\n        return 'boolean';\n      case 'int2':\n        return 'smallint';\n      case 'int4':\n        return 'int';\n      case 'int8':\n        return 'bigint';\n      case 'real': case 'float4':\n        return 'real';\n      case 'float8':\n        return 'pg_catalog.float8';\n      case 'text':\n        // SELECT EXTRACT(CENTURY FROM CURRENT_DATE)>=21 AS True\n        return 'pg_catalog.text';\n      case 'date':\n        return 'pg_catalog.date';\n      case 'time':\n        return 'time';\n      case 'timetz':\n        return 'pg_catalog.timetz';\n      case 'timestamp':\n        return 'timestamp';\n      case 'timestamptz':\n        return 'pg_catalog.timestamptz';\n      case 'interval':\n        return 'interval';\n      case 'bit':\n        return 'bit';\n      default:\n        throw new Error(format('Unhandled data type: %s', typeName));\n    }\n  }\n\n  type(names, args) {\n    const [ catalog, type ] = names.map(name => this.deparse(name));\n\n    const mods = (name, size) => {\n      if (size != null) {\n        return name + '(' + size + ')';\n      }\n\n      return name;\n    };\n\n    // handle the special \"char\" (in quotes) type\n    if (names[0].String.str === 'char') {\n      names[0].String.str = '\"char\"';\n    }\n\n    if (catalog !== 'pg_catalog') {\n      return mods(this.list(names, '.'), args);\n    }\n\n    const res = this.convertTypeName(type, args);\n\n    return mods(res, args);\n  }\n\n  deparse(item, context) {\n    if (item == null) {\n      return null;\n    }\n\n    if (_.isNumber(item)) {\n      return item;\n    }\n\n    const type = keys(item)[0];\n    const node = _.values(item)[0];\n\n    if (this[type] == null) {\n      throw new Error(type + ' is not implemented');\n    }\n\n    return this[type](node, context);\n  }\n\n  ['A_Expr'](node, context) {\n    const output = [];\n\n    switch (node.kind) {\n      case 0: // AEXPR_OP\n        if (node.lexpr) {\n          output.push(parens(this.deparse(node.lexpr)));\n        }\n\n        if (node.name.length > 1) {\n          const schema = this.deparse(node.name[0]);\n          const operator = this.deparse(node.name[1]);\n          output.push(`OPERATOR(${schema}.${operator})`);\n        } else {\n          output.push(this.deparse(node.name[0]));\n        }\n\n        if (node.rexpr) {\n          output.push(parens(this.deparse(node.rexpr)));\n        }\n\n        if (output.length === 2) {\n          return parens(output.join(''));\n        }\n\n        return parens(output.join(' '));\n\n      case 1: // AEXPR_OP_ANY\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ANY (%s)', this.deparse(node.rexpr)));\n        return output.join(` ${this.deparse(node.name[0])} `);\n\n      case 2: // AEXPR_OP_ALL\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ALL (%s)', this.deparse(node.rexpr)));\n        return output.join(` ${this.deparse(node.name[0])} `);\n\n      case 3: // AEXPR_DISTINCT\n        return format('%s IS DISTINCT FROM %s', this.deparse(node.lexpr), this.deparse(node.rexpr));\n\n      case 4: // AEXPR_NULLIF\n        return format('NULLIF(%s, %s)', this.deparse(node.lexpr), this.deparse(node.rexpr));\n\n      case 5: { // AEXPR_OF\n        const op = node.name[0].String.str === '=' ? 'IS OF' : 'IS NOT OF';\n        return format('%s %s (%s)', this.deparse(node.lexpr), op, this.list(node.rexpr));\n      }\n\n      case 6: { // AEXPR_IN\n        const operator = node.name[0].String.str === '=' ? 'IN' : 'NOT IN';\n\n        return format('%s %s (%s)', this.deparse(node.lexpr), operator, this.list(node.rexpr));\n      }\n\n      case 7: // AEXPR_LIKE\n        output.push(this.deparse(node.lexpr));\n\n        if (node.name[0].String.str === '!~~') {\n          output.push(format('NOT LIKE (%s)', this.deparse(node.rexpr)));\n        } else {\n          output.push(format('LIKE (%s)', this.deparse(node.rexpr)));\n        }\n\n        return output.join(' ');\n\n      case 8: // AEXPR_ILIKE\n        output.push(this.deparse(node.lexpr));\n\n        if (node.name[0].String.str === '!~~*') {\n          output.push(format('NOT ILIKE (%s)', this.deparse(node.rexpr)));\n        } else {\n          output.push(format('ILIKE (%s)', this.deparse(node.rexpr)));\n        }\n\n        return output.join(' ');\n\n      case 9: // AEXPR_SIMILAR\n        // SIMILAR TO emits a similar_escape FuncCall node with the first argument\n        output.push(this.deparse(node.lexpr));\n\n        if (this.deparse(node.rexpr.FuncCall.args[1].Null)) {\n          output.push(format('SIMILAR TO %s', this.deparse(node.rexpr.FuncCall.args[0])));\n        } else {\n          output.push(format('SIMILAR TO %s ESCAPE %s',\n                             this.deparse(node.rexpr.FuncCall.args[0]),\n                             this.deparse(node.rexpr.FuncCall.args[1])));\n        }\n\n        return output.join(' ');\n\n      case 10: // AEXPR_BETWEEN TODO(zhm) untested\n        output.push(this.deparse(node.lexpr));\n        output.push(format('BETWEEN %s AND %s', this.deparse(node.rexpr[0]), this.deparse(node.rexpr[1])));\n        return output.join(' ');\n\n      case 11: // AEXPR_NOT_BETWEEN TODO(zhm) untested\n        output.push(this.deparse(node.lexpr));\n        output.push(format('NOT BETWEEN %s AND %s', this.deparse(node.rexpr[0]), this.deparse(node.rexpr[1])));\n        return output.join(' ');\n\n      default:\n        return fail('A_Expr', node);\n    }\n  }\n\n  ['Alias'](node, context) {\n    const name = node.aliasname;\n\n    const output = [ 'AS' ];\n\n    if (node.colnames) {\n      output.push(name + parens(this.list(node.colnames)));\n    } else {\n      output.push(this.quote(name));\n    }\n\n    return output.join(' ');\n  }\n\n  ['A_ArrayExpr'](node) {\n    return format('ARRAY[%s]', this.list(node.elements));\n  }\n\n  ['A_Const'](node, context) {\n    if (node.val.String) {\n      return this.escape(this.deparse(node.val));\n    }\n\n    return this.deparse(node.val);\n  }\n\n  ['A_Indices'](node) {\n    if (node.lidx) {\n      return format('[%s:%s]', this.deparse(node.lidx), this.deparse(node.uidx));\n    }\n\n    return format('[%s]', this.deparse(node.uidx));\n  }\n\n  ['A_Indirection'](node) {\n    const output = [ `(${this.deparse(node.arg)})` ];\n\n    // TODO(zhm) figure out the actual rules for when a '.' is needed\n    //\n    // select a.b[0] from a;\n    // select (select row(1)).*\n    // select c2[2].f2 from comptable\n    // select c2.a[2].f2[1].f3[0].a1 from comptable\n\n    for (let i = 0; i < node.indirection.length; i++) {\n      const subnode = node.indirection[i];\n\n      if (subnode.String || subnode.A_Star) {\n        const value = subnode.A_Star ? '*' : this.quote(subnode.String.str);\n\n        output.push(`.${value}`);\n      } else {\n        output.push(this.deparse(subnode));\n      }\n    }\n\n    return output.join('');\n  }\n\n  ['A_Star'](node, context) {\n    return '*';\n  }\n\n  ['BitString'](node) {\n    const prefix = node.str[0];\n    return `${prefix}'${node.str.substring(1)}'`;\n  }\n\n  ['BoolExpr'](node) {\n    switch (node.boolop) {\n      case 0:\n        return parens(this.list(node.args, ' AND '));\n      case 1:\n        return parens(this.list(node.args, ' OR '));\n      case 2:\n        return format('NOT (%s)', this.deparse(node.args[0]));\n      default:\n        return fail('BoolExpr', node);\n    }\n  }\n\n  ['BooleanTest'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.arg));\n\n    const tests = [\n      'IS TRUE',\n      'IS NOT TRUE',\n      'IS FALSE',\n      'IS NOT FALSE',\n      'IS UNKNOWN',\n      'IS NOT UNKNOWN'\n    ];\n\n    output.push(tests[node.booltesttype]);\n\n    return output.join(' ');\n  }\n\n  ['CaseExpr'](node) {\n    const output = [ 'CASE' ];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    for (let i = 0; i < node.args.length; i++) {\n      output.push(this.deparse(node.args[i]));\n    }\n\n    if (node.defresult) {\n      output.push('ELSE');\n      output.push(this.deparse(node.defresult));\n    }\n\n    output.push('END');\n\n    return output.join(' ');\n  }\n\n  ['CoalesceExpr'](node) {\n    return format('COALESCE(%s)', this.list(node.args));\n  }\n\n  ['CollateClause'](node) {\n    const output = [];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    output.push('COLLATE');\n\n    if (node.collname) {\n      output.push(this.quote(this.deparseNodes(node.collname)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ColumnDef'](node) {\n    const output = [ this.quote(node.colname) ];\n\n    output.push(this.deparse(node.typeName));\n\n    if (node.raw_default) {\n      output.push('USING');\n      output.push(this.deparse(node.raw_default));\n    }\n\n    if (node.constraints) {\n      output.push(this.list(node.constraints, ' '));\n    }\n\n    return _.compact(output).join(' ');\n  }\n\n  ['ColumnRef'](node) {\n    const fields = node.fields.map(field => {\n      if (field.String) {\n        return this.quote(this.deparse(field));\n      }\n\n      return this.deparse(field);\n    });\n\n    return fields.join('.');\n  }\n\n  ['CommonTableExpr'](node) {\n    const output = [];\n\n    output.push(node.ctename);\n\n    if (node.aliascolnames) {\n      output.push(format('(%s)', this.quote(this.deparseNodes(node.aliascolnames))));\n    }\n\n    output.push(format('AS (%s)', this.deparse(node.ctequery)));\n\n    return output.join(' ');\n  }\n\n  ['Float'](node) {\n    // wrap negative numbers in parens, SELECT (-2147483648)::int4 * (-1)::int4\n    if (node.str[0] === '-') {\n      return `(${node.str})`;\n    }\n\n    return node.str;\n  }\n\n  ['FuncCall'](node, context) {\n    const output = [];\n\n    let params = [];\n\n    if (node.args) {\n      params = node.args.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    // COUNT(*)\n    if (node.agg_star) {\n      params.push('*');\n    }\n\n    const name = this.list(node.funcname, '.');\n\n    const order = [];\n\n    const withinGroup = node.agg_within_group;\n\n    if (node.agg_order) {\n      order.push('ORDER BY');\n      order.push(this.list(node.agg_order, ', '));\n    }\n\n    const call = [];\n\n    call.push(name + '(');\n\n    if (node.agg_distinct) {\n      call.push('DISTINCT ');\n    }\n\n    // prepend variadic before the last parameter\n    // SELECT CONCAT('|', VARIADIC ARRAY['1','2','3'])\n    if (node.func_variadic) {\n      params[params.length - 1] = 'VARIADIC ' + params[params.length - 1];\n    }\n\n    call.push(params.join(', '));\n\n    if (order.length && !withinGroup) {\n      call.push(' ');\n      call.push(order.join(' '));\n    }\n\n    call.push(')');\n\n    output.push(compact(call).join(''));\n\n    if (order.length && withinGroup) {\n      output.push('WITHIN GROUP');\n      output.push(parens(order.join(' ')));\n    }\n\n    if (node.agg_filter != null) {\n      output.push(format('FILTER (WHERE %s)', this.deparse(node.agg_filter)));\n    }\n\n    if (node.over != null) {\n      output.push(format('OVER %s', this.deparse(node.over)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['GroupingFunc'](node) {\n    return 'GROUPING(' + this.list(node.args) + ')';\n  }\n\n  ['GroupingSet'](node) {\n    switch (node.kind) {\n      case 0: // GROUPING_SET_EMPTY\n        return '()';\n\n      case 1: // GROUPING_SET_SIMPLE\n        return fail('GroupingSet', node);\n\n      case 2: // GROUPING_SET_ROLLUP\n        return 'ROLLUP (' + this.list(node.content) + ')';\n\n      case 3: // GROUPING_SET_CUBE\n        return 'CUBE (' + this.list(node.content) + ')';\n\n      case 4: // GROUPING_SET_SETS\n        return 'GROUPING SETS (' + this.list(node.content) + ')';\n\n      default:\n        return fail('GroupingSet', node);\n    }\n  }\n\n  ['Integer'](node) {\n    if (node.ival < 0) {\n      return `(${node.ival})`;\n    }\n\n    return node.ival.toString();\n  }\n\n  ['IntoClause'](node) {\n    return this.deparse(node.rel);\n  }\n\n  ['JoinExpr'](node, context) {\n    const output = [];\n\n    output.push(this.deparse(node.larg));\n\n    if (node.isNatural) {\n      output.push('NATURAL');\n    }\n\n    let join = null;\n\n    switch (true) {\n      case node.jointype === 0 && (node.quals != null):\n        join = 'INNER JOIN';\n        break;\n\n      case node.jointype === 0 && !node.isNatural && !(node.quals != null) && !(node.usingClause != null):\n        join = 'CROSS JOIN';\n        break;\n\n      case node.jointype === 0:\n        join = 'JOIN';\n        break;\n\n      case node.jointype === 1:\n        join = 'LEFT OUTER JOIN';\n        break;\n\n      case node.jointype === 2:\n        join = 'FULL OUTER JOIN';\n        break;\n\n      case node.jointype === 3:\n        join = 'RIGHT OUTER JOIN';\n        break;\n\n      default:\n        fail('JoinExpr', node);\n        break;\n    }\n\n    output.push(join);\n\n    if (node.rarg) {\n      // wrap nested join expressions in parens to make the following symmetric:\n      // select * from int8_tbl x cross join (int4_tbl x cross join lateral (select x.f1) ss)\n      if ((node.rarg.JoinExpr != null) && !(node.rarg.JoinExpr.alias != null)) {\n        output.push(`(${this.deparse(node.rarg)})`);\n      } else {\n        output.push(this.deparse(node.rarg));\n      }\n    }\n\n    if (node.quals) {\n      output.push(`ON ${this.deparse(node.quals)}`);\n    }\n\n    if (node.usingClause) {\n      const using = this.quote(this.deparseNodes(node.usingClause)).join(', ');\n\n      output.push(`USING (${using})`);\n    }\n\n    const wrapped =\n      (node.rarg.JoinExpr != null) || node.alias ? '(' + output.join(' ') + ')'\n                                                 : output.join(' ');\n\n    if (node.alias) {\n      return wrapped + ' ' + this.deparse(node.alias);\n    }\n\n    return wrapped;\n  }\n\n  ['LockingClause'](node) {\n    const strengths = [\n      'NONE', // LCS_NONE\n      'FOR KEY SHARE',\n      'FOR SHARE',\n      'FOR NO KEY UPDATE',\n      'FOR UPDATE'\n    ];\n\n    const output = [];\n\n    output.push(strengths[node.strength]);\n\n    if (node.lockedRels) {\n      output.push('OF');\n      output.push(this.list(node.lockedRels));\n    }\n\n    return output.join(' ');\n  }\n\n  ['MinMaxExpr'](node) {\n    const output = [];\n\n    if (node.op === 0) {\n      output.push('GREATEST');\n    } else {\n      output.push('LEAST');\n    }\n\n    output.push(parens(this.list(node.args)));\n\n    return output.join('');\n  }\n\n  ['NamedArgExpr'](node) {\n    const output = [];\n\n    output.push(node.name);\n    output.push(':=');\n    output.push(this.deparse(node.arg));\n\n    return output.join(' ');\n  }\n\n  ['Null'](node) {\n    return 'NULL';\n  }\n\n  ['NullTest'](node) {\n    const output = [ this.deparse(node.arg) ];\n\n    if (node.nulltesttype === 0) {\n      output.push('IS NULL');\n    } else if (node.nulltesttype === 1) {\n      output.push('IS NOT NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ParamRef'](node) {\n    if (node.number >= 0) {\n      return [ '$', node.number ].join('');\n    }\n    return '?';\n  }\n\n  ['RangeFunction'](node) {\n    const output = [];\n\n    if (node.lateral) {\n      output.push('LATERAL');\n    }\n\n    const funcs = [];\n\n    for (let i = 0; i < node.functions.length; i++) {\n      const funcCall = node.functions[i];\n      const call = [ this.deparse(funcCall[0]) ];\n\n      if (funcCall[1] && funcCall[1].length) {\n        call.push(format('AS (%s)', this.list(funcCall[1])));\n      }\n\n      funcs.push(call.join(' '));\n    }\n\n    const calls = funcs.join(', ');\n\n    if (node.is_rowsfrom) {\n      output.push(`ROWS FROM (${calls})`);\n    } else {\n      output.push(calls);\n    }\n\n    if (node.ordinality) {\n      output.push('WITH ORDINALITY');\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    if (node.coldeflist) {\n      const defList = this.list(node.coldeflist);\n\n      if (!node.alias) {\n        output.push(` AS (${defList})`);\n      } else {\n        output.push(`(${defList})`);\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeSubselect'](node, context) {\n    let output = '';\n\n    if (node.lateral) {\n      output += 'LATERAL ';\n    }\n\n    output += parens(this.deparse(node.subquery));\n\n    if (node.alias) {\n      return output + ' ' + this.deparse(node.alias);\n    }\n\n    return output;\n  }\n\n  ['RangeTableSample'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.relation));\n    output.push('TABLESAMPLE');\n    output.push(this.deparse(node.method[0]));\n\n    if (node.args) {\n      output.push(parens(this.list(node.args)));\n    }\n\n    if (node.repeatable) {\n      output.push('REPEATABLE(' + this.deparse(node.repeatable) + ')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeVar'](node, context) {\n    const output = [];\n\n    if (node.inhOpt === 0) {\n      output.push('ONLY');\n    }\n\n    if (node.relpersistence === 'u') {\n      output.push('UNLOGGED');\n    }\n\n    if (node.relpersistence === 't') {\n      output.push('TEMPORARY');\n    }\n\n    if (node.schemaname != null) {\n      output.push(this.quote(node.schemaname));\n      output.push('.');\n    }\n\n    output.push(this.quote(node.relname));\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ResTarget'](node, context) {\n    if (context === 'select') {\n      return compact([ this.deparse(node.val), this.quote(node.name) ]).join(' AS ');\n    } else if (context === 'update') {\n      return compact([ node.name, this.deparse(node.val) ]).join(' = ');\n    } else if (!(node.val != null)) {\n      return this.quote(node.name);\n    }\n\n    return fail('ResTarget', node);\n  }\n\n  ['RowExpr'](node) {\n    if (node.row_format === 2) {\n      return parens(this.list(node.args));\n    }\n\n    return format('ROW(%s)', this.list(node.args));\n  }\n\n  ['SelectStmt'](node, context) {\n    const output = [];\n\n    if (node.withClause) {\n      output.push(this.deparse(node.withClause));\n    }\n\n    if (node.op === 0) {\n      // VALUES select's don't get SELECT\n      if (node.valuesLists == null) {\n        output.push('SELECT');\n      }\n    } else {\n      output.push(parens(this.deparse(node.larg)));\n\n      const sets = [\n        'NONE',\n        'UNION',\n        'INTERSECT',\n        'EXCEPT'\n      ];\n\n      output.push(sets[node.op]);\n\n      if (node.all) {\n        output.push('ALL');\n      }\n\n      output.push(parens(this.deparse(node.rarg)));\n    }\n\n    if (node.distinctClause) {\n      if (node.distinctClause[0] != null) {\n        output.push('DISTINCT ON');\n\n        const clause = (node.distinctClause.map(e => this.deparse(e, 'select'))).join(',\\n');\n\n        output.push(`(${clause})`);\n      } else {\n        output.push('DISTINCT');\n      }\n    }\n\n    if (node.targetList) {\n      output.push(indent((node.targetList.map(e => this.deparse(e, 'select'))).join(',\\n')));\n    }\n\n    if (node.intoClause) {\n      output.push('INTO');\n      output.push(indent(this.deparse(node.intoClause)));\n    }\n\n    if (node.fromClause) {\n      output.push('FROM');\n      output.push(indent((node.fromClause.map(e => this.deparse(e, 'from'))).join(',\\n')));\n    }\n\n    if (node.whereClause) {\n      output.push('WHERE');\n      output.push(indent(this.deparse(node.whereClause)));\n    }\n\n    if (node.valuesLists) {\n      output.push('VALUES');\n\n      const lists = node.valuesLists.map(list => {\n        return `(${(list.map(v => this.deparse(v))).join(', ')})`;\n      });\n\n      output.push(lists.join(', '));\n    }\n\n    if (node.groupClause) {\n      output.push('GROUP BY');\n      output.push(indent((node.groupClause.map(e => this.deparse(e, 'group'))).join(',\\n')));\n    }\n\n    if (node.havingClause) {\n      output.push('HAVING');\n      output.push(indent(this.deparse(node.havingClause)));\n    }\n\n    if (node.windowClause) {\n      output.push('WINDOW');\n\n      const windows = [];\n\n      for (let i = 0; i < node.windowClause.length; i++) {\n        const w = node.windowClause[i];\n        const window = [];\n\n        if (w.WindowDef.name) {\n          window.push(this.quote(w.WindowDef.name) + ' AS');\n        }\n\n        window.push(parens(this.deparse(w, 'window')));\n\n        windows.push(window.join(' '));\n      }\n\n      output.push(windows.join(', '));\n    }\n\n    if (node.sortClause) {\n      output.push('ORDER BY');\n      output.push(indent((node.sortClause.map(e => this.deparse(e, 'sort'))).join(',\\n')));\n    }\n\n    if (node.limitCount) {\n      output.push('LIMIT');\n      output.push(indent(this.deparse(node.limitCount)));\n    }\n\n    if (node.limitOffset) {\n      output.push('OFFSET');\n      output.push(indent(this.deparse(node.limitOffset)));\n    }\n\n    if (node.lockingClause) {\n      node.lockingClause.forEach(item => {\n        return output.push(this.deparse(item));\n      });\n    }\n\n    return output.join(' ');\n  }\n\n  ['SortBy'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.node));\n\n    if (node.sortby_dir === 1) {\n      output.push('ASC');\n    }\n\n    if (node.sortby_dir === 2) {\n      output.push('DESC');\n    }\n\n    if (node.sortby_dir === 3) {\n      output.push(`USING ${this.deparseNodes(node.useOp)}`);\n    }\n\n    if (node.sortby_nulls === 1) {\n      output.push('NULLS FIRST');\n    }\n\n    if (node.sortby_nulls === 2) {\n      output.push('NULLS LAST');\n    }\n\n    return output.join(' ');\n  }\n\n  ['String'](node) {\n    return node.str;\n  }\n\n  ['SubLink'](node) {\n    switch (true) {\n      case node.subLinkType === 0:\n        return format('EXISTS (%s)', this.deparse(node.subselect));\n      case node.subLinkType === 1:\n        return format('%s %s ALL (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 2 && !(node.operName != null):\n        return format('%s IN (%s)', this.deparse(node.testexpr), this.deparse(node.subselect));\n      case node.subLinkType === 2:\n        return format('%s %s ANY (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 3:\n        return format('%s %s (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 4:\n        return format('(%s)', this.deparse(node.subselect));\n      case node.subLinkType === 5:\n        // TODO(zhm) what is this?\n        return fail('SubLink', node);\n        // MULTIEXPR_SUBLINK\n        // format('(%s)', @deparse(node.subselect))\n      case node.subLinkType === 6:\n        return format('ARRAY (%s)', this.deparse(node.subselect));\n      default:\n        return fail('SubLink', node);\n    }\n  }\n\n  ['TypeCast'](node) {\n    return this.deparse(node.arg) + '::' + this.deparse(node.typeName);\n  }\n\n  ['TypeName'](node) {\n    if (_.last(node.names).String.str === 'interval') {\n      return this.deparseInterval(node);\n    }\n\n    const output = [];\n\n    if (node.setof) {\n      output.push('SETOF');\n    }\n\n    let args = null;\n\n    if (node.typmods != null) {\n      args = node.typmods.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    const type = [];\n\n    type.push(this.type(node.names, args && args.join(', ')));\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    output.push(type.join(''));\n\n    return output.join(' ');\n  }\n\n  ['CaseWhen'](node) {\n    const output = [ 'WHEN' ];\n\n    output.push(this.deparse(node.expr));\n    output.push('THEN');\n    output.push(this.deparse(node.result));\n\n    return output.join(' ');\n  }\n\n  ['WindowDef'](node, context) {\n    const output = [];\n\n    if (context !== 'window') {\n      if (node.name) {\n        output.push(node.name);\n      }\n    }\n\n    const empty = (!(node.partitionClause != null) && !(node.orderClause != null));\n\n    const frameOptions = this.deparseFrameOptions(node.frameOptions, node.refname, node.startOffset, node.endOffset);\n\n    if (empty && context !== 'window' && !(node.name != null) && frameOptions.length === 0) {\n      return '()';\n    }\n\n    const windowParts = [];\n\n    let useParens = false;\n\n    if (node.partitionClause) {\n      const partition = [ 'PARTITION BY' ];\n\n      const clause = node.partitionClause.map(item => this.deparse(item));\n\n      partition.push(clause.join(', '));\n\n      windowParts.push(partition.join(' '));\n      useParens = true;\n    }\n\n    if (node.orderClause) {\n      windowParts.push('ORDER BY');\n\n      const orders = node.orderClause.map(item => {\n        return this.deparse(item);\n      });\n\n      windowParts.push(orders.join(', '));\n\n      useParens = true;\n    }\n\n    if (frameOptions.length) {\n      useParens = true;\n      windowParts.push(frameOptions);\n    }\n\n    if (useParens && context !== 'window') {\n      return output.join(' ') + ' (' + windowParts.join(' ') + ')';\n    }\n\n    return output.join(' ') + windowParts.join(' ');\n  }\n\n  ['WithClause'](node) {\n    const output = [ 'WITH' ];\n\n    if (node.recursive) {\n      output.push('RECURSIVE');\n    }\n\n    output.push(this.list(node.ctes));\n\n    return output.join(' ');\n  }\n\n  deparseFrameOptions(options, refName, startOffset, endOffset) {\n    const FRAMEOPTION_NONDEFAULT = 0x00001; // any specified?\n    const FRAMEOPTION_RANGE = 0x00002; // RANGE behavior\n    const FRAMEOPTION_ROWS = 0x00004; // ROWS behavior\n    const FRAMEOPTION_BETWEEN = 0x00008; // BETWEEN given?\n    const FRAMEOPTION_START_UNBOUNDED_PRECEDING = 0x00010; // start is U. P.\n    const FRAMEOPTION_END_UNBOUNDED_PRECEDING = 0x00020; // (disallowed)\n    const FRAMEOPTION_START_UNBOUNDED_FOLLOWING = 0x00040; // (disallowed)\n    const FRAMEOPTION_END_UNBOUNDED_FOLLOWING = 0x00080; // end is U. F.\n    const FRAMEOPTION_START_CURRENT_ROW = 0x00100; // start is C. R.\n    const FRAMEOPTION_END_CURRENT_ROW = 0x00200; // end is C. R.\n    const FRAMEOPTION_START_VALUE_PRECEDING = 0x00400; // start is V. P.\n    const FRAMEOPTION_END_VALUE_PRECEDING = 0x00800; // end is V. P.\n    const FRAMEOPTION_START_VALUE_FOLLOWING = 0x01000; // start is V. F.\n    const FRAMEOPTION_END_VALUE_FOLLOWING = 0x02000; // end is V. F.\n\n    if (!(options & FRAMEOPTION_NONDEFAULT)) {\n      return '';\n    }\n\n    const output = [];\n\n    if (refName != null) {\n      output.push(refName);\n    }\n\n    if (options & FRAMEOPTION_RANGE) {\n      output.push('RANGE');\n    }\n\n    if (options & FRAMEOPTION_ROWS) {\n      output.push('ROWS');\n    }\n\n    const between = options & FRAMEOPTION_BETWEEN;\n\n    if (between) {\n      output.push('BETWEEN');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_PRECEDING) {\n      output.push('UNBOUNDED PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_FOLLOWING) {\n      output.push('UNBOUNDED FOLLOWING');\n    }\n\n    if (options & FRAMEOPTION_START_CURRENT_ROW) {\n      output.push('CURRENT ROW');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_PRECEDING) {\n      output.push(this.deparse(startOffset) + ' PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_FOLLOWING) {\n      output.push(this.deparse(startOffset) + ' FOLLOWING');\n    }\n\n    if (between) {\n      output.push('AND');\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_PRECEDING) {\n        output.push('UNBOUNDED PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_FOLLOWING) {\n        output.push('UNBOUNDED FOLLOWING');\n      }\n\n      if (options & FRAMEOPTION_END_CURRENT_ROW) {\n        output.push('CURRENT ROW');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_PRECEDING) {\n        output.push(this.deparse(endOffset) + ' PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_FOLLOWING) {\n        output.push(this.deparse(endOffset) + ' FOLLOWING');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  deparseInterval(node) {\n    const type = [ 'interval' ];\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    if (node.typmods) {\n      const typmods = node.typmods.map(item => this.deparse(item));\n\n      let intervals = this.interval(typmods[0]);\n\n      // SELECT interval(0) '1 day 01:23:45.6789'\n      if (node.typmods[0] && node.typmods[0].A_Const && node.typmods[0].A_Const.val.Integer.ival === 32767 && node.typmods[1] && (node.typmods[1].A_Const != null)) {\n        intervals = [ `(${node.typmods[1].A_Const.val.Integer.ival})` ];\n      } else {\n        intervals = intervals.map(part => {\n          if (part === 'second' && typmods.length === 2) {\n            return 'second(' + _.last(typmods) + ')';\n          }\n\n          return part;\n        });\n      }\n\n      type.push(intervals.join(' to '));\n    }\n\n    return type.join(' ');\n  }\n\n  interval(mask) {\n    // ported from https://github.com/lfittl/pg_query/blob/master/lib/pg_query/deparse/interval.rb\n    if (this.MASKS == null) {\n      this.MASKS = {\n        0: 'RESERV',\n        1: 'MONTH',\n        2: 'YEAR',\n        3: 'DAY',\n        4: 'JULIAN',\n        5: 'TZ',\n        6: 'DTZ',\n        7: 'DYNTZ',\n        8: 'IGNORE_DTF',\n        9: 'AMPM',\n        10: 'HOUR',\n        11: 'MINUTE',\n        12: 'SECOND',\n        13: 'MILLISECOND',\n        14: 'MICROSECOND',\n        15: 'DOY',\n        16: 'DOW',\n        17: 'UNITS',\n        18: 'ADBC',\n        19: 'AGO',\n        20: 'ABS_BEFORE',\n        21: 'ABS_AFTER',\n        22: 'ISODATE',\n        23: 'ISOTIME',\n        24: 'WEEK',\n        25: 'DECADE',\n        26: 'CENTURY',\n        27: 'MILLENNIUM',\n        28: 'DTZMOD'\n      };\n    }\n\n    if (this.BITS == null) {\n      this.BITS = _.invert(this.MASKS);\n    }\n\n    if (this.INTERVALS == null) {\n      this.INTERVALS = {};\n      this.INTERVALS[(1 << this.BITS.YEAR)] = [ 'year' ];\n      this.INTERVALS[(1 << this.BITS.MONTH)] = [ 'month' ];\n      this.INTERVALS[(1 << this.BITS.DAY)] = [ 'day' ];\n      this.INTERVALS[(1 << this.BITS.HOUR)] = [ 'hour' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE)] = [ 'minute' ];\n      this.INTERVALS[(1 << this.BITS.SECOND)] = [ 'second' ];\n      this.INTERVALS[(1 << this.BITS.YEAR | 1 << this.BITS.MONTH)] = [ 'year', 'month' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR)] = [ 'day', 'hour' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR | 1 << this.BITS.MINUTE)] = [ 'day', 'minute' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR | 1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'day', 'second' ];\n      this.INTERVALS[(1 << this.BITS.HOUR | 1 << this.BITS.MINUTE)] = [ 'hour', 'minute' ];\n      this.INTERVALS[(1 << this.BITS.HOUR | 1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'hour', 'second' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'minute', 'second' ];\n\n      // utils/timestamp.h\n      // #define INTERVAL_FULL_RANGE (0x7FFF)\n      this.INTERVALS[this.INTERVAL_FULL_RANGE = '32767'] = [];\n    }\n\n    return this.INTERVALS[mask.toString()];\n  }\n}\n"]}